name: Native and WSL

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
        run:
          shell: ${{ matrix.configuration == 'wsl' && 'wsl-bash {0}' || 'pwsh' }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]
        node-version: [22, 20, 18]
        configuration: [wsl, native]

    steps:
    - uses: actions/checkout@v4
    - uses: Vampire/setup-wsl@v3
      if: matrix.configuration == 'wsl'
      with:
        distribution: Ubuntu-22.04
    - run: curl --version
    - name: 'WSL: do all npm install steps'
      if: matrix.configuration == 'wsl'
      env:
        ESLINT_VERSION: 9
      run: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
        nvm install --latest-npm ${{ matrix.node-version }}

        npm install
        npm run copy-metafiles
        npm run pretest
        npm run tests-only

    - name: Install dependencies in Native
      if: matrix.configuration == 'native'
      run: npm install

    - name: install the latest version of nyc in Native
      if: matrix.configuration == 'native'
      run: npm install nyc@latest --no-save

    - name: copy metafiles in Native
      if: matrix.configuration == 'native'
      env:
        ESLINT_VERSION: 9
      run: |
        npm run copy-metafiles
        bash ./tests/dep-time-travel.sh 2>&1

    - name: install ./resolver dependencies in Native
      if: matrix.configuration == 'native'
      shell: pwsh
      run: |
        npm config set package-lock false
        $resolverDir = "./resolvers"
        Get-ChildItem -Directory $resolverDir |
          ForEach {
            Write-output $(Resolve-Path $(Join-Path $resolverDir  $_.Name))
            Push-Location $(Resolve-Path $(Join-Path $resolverDir  $_.Name))
              npm install
              npm ls nyc > $null;
              if ($?) {
                npm install nyc@latest --no-save
              }
              Pop-Location
            }

    - name: run tests in Native
      if: matrix.configuration == 'native'
      shell: pwsh
      run: |
        npm run pretest
        npm run tests-only
        $resolverDir = "./resolvers";
        $resolvers = @();
        Get-ChildItem -Directory $resolverDir |
          ForEach {
            $resolvers += "$(Resolve-Path $(Join-Path $resolverDir $_.Name))";
          }
        $env:RESOLVERS = [string]::Join(";", $resolvers);
        foreach ($resolver in $resolvers) {
            Set-Location -Path $resolver.Trim('"')
            npm run tests-only
            Set-Location -Path $PSScriptRoot
        }

    - name: codecov
      uses: codecov/codecov-action@v3.1.5

  windows:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - run: true
